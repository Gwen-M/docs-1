.suggestedQuestionContainer {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  padding-top: 20px;
  padding-bottom: 12px;
  gap: 8px;
}

.openModalButton {
  background-color: #1098fc;
}

.suggestedQuestionBox {
  height: max-content;
  padding-top: 12px;
  padding-bottom: 12px;
}

.maximizeButton {
  position: absolute;
  top: 20px;
  right: 20px;
  color: white;
  cursor: pointer;
  z-index: 20;
}

.column {
  display: flex;
  flex-direction: column;
}

.readSection {
  position: relative;
  --padding-top: 20px;
  --padding-bottom: 120px;

  flex-grow: 1;
  display: flex;
  flex-direction: column-reverse;
  padding-bottom: var(--padding-bottom);
  padding-top: var(--padding-top);
  overflow-y: scroll;
  gap: 10px;

  mask-image: linear-gradient(
    to bottom,
    transparent,
    rgba(0, 0, 0, 1) var(--padding-top),
    rgba(0, 0, 0, 1) calc(100% - var(--padding-bottom) - 20px),
    transparent calc(100% - var(--padding-bottom) + 20px)
  );
}

/* Invisible scrollbar */
.readSection::-webkit-scrollbar {
  display: none; /* Safari and Chrome */
}
.readSection {
  scrollbar-width: none; /* Firefox */
}
/* Invisible scrollbar end */

.writeSection {
  position: relative;
  display: flex;
  flex-shrink: 0;
  align-items: center;
  width: 100%;
  height: max-content;
  gap: 4px;
  padding-left: 20px;
  padding-right: 20px;
}

.writeSection textarea::placeholder {
  color: var(--cookbook-muted-color) !important;
}

.sendButton {
  position: absolute;
  padding: 0;
  height: 35px;
  bottom: 10px;
  right: 30px;
  z-index: 50;
}

/*
const resolveFns = (_rules) => {
  let rules = [..._rules];

  while (rules.find((item) => typeof item === "function")) {
    rules = rules?.flatMap?.((rule) =>
      typeof rule === "function"
        ? css([
            rule({
              $variant: "outline",
              $color: "accentAlpha",
              $size: "large",
            }) || "",
          ])
        : rule,
    );
  }

  // if (flatMap.find((item) => typeof item === "function")) {
  //   console.log("flatmap", flatMap);
  //   flatMap = flatMap?.map((rule) =>
  //     typeof rule === "function"
  //       ? rule({
  //           $variant: "outline",
  //           $color: "accentAlpha",
  //           $size: "large",
  //         })
  //       : rule,
  //   );
  // }

  return rules;
};

console.log(resolveFns(ReadSection.componentStyle.rules));
console.log(["tw", css(tw`p-4.5 pl-0 pt-0 flex flex-col grow overflow-hidden`).join("\n")]);
*/

.container {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid var(--ifm-color-emphasis-300);
  color: #646464;
  padding: 0;

  background: var(--cookbook-modal-background);
  border-radius: 6px;
  box-shadow: var(--cookbook-modal-shadow);
  margin: auto;
  margin-top: 30px;
  position: relative;

  width: 100%;
  height: 100%;
  max-width: var(--cookbook-modal-width);
  max-height: var(--cookbook-modal-height);
}

.row {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  overflow: hidden;
}

.sidebarWrapper {
  box-sizing: border-box;
  display: flex;
  flex-shrink: 0;
  overflow: hidden;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.87, 0, 0.13, 1);

  width: 0px;
}
.sidebarWrapper__open {
  width: 260px;
}
.sidebarContent {
  position: relative;
  box-sizing: border-box;
  display: flex;
  width: 260px;
  flex-shrink: 0;
  flex-direction: column;
  border-right-width: 1px;
  border-right-style: solid;
  --tw-border-opacity: 1;
  border-right-color: var(--ifm-color-emphasis-200);
}

.container__expanded {
  height: 100%;
  box-sizing: border-box;
  margin-top: -300px;
}

.inputField {
  appearance: none;
  background: var(
    --cookbook-searchbox-background,
    var(--ifm-color-emphasis-100)
  );
  border: 0;
  border-radius: var(--ifm-button-border-radius);
  color: var(--cookbook-text-color);
  flex: 1;
  font-size: 0.9rem;
  height: 100%;
  outline: 0;
  width: 80%;

  padding-left: 16px;
  padding-right: 16px;
}

.suggestionsContainer {
  display: flex;
  position: relative;
  z-index: 10;
  width: 100%;
  min-height: calc(
    0.875rem * var(--ifm-button-size-multiplier) * 1.5 +
      var(--ifm-button-padding-vertical) * 2 * var(--ifm-button-size-multiplier)
  );
  height: max-content;
}
.suggestionsContainer > * {
  height: max-content;
}

.tags {
  --padding-left: 20px;
  --padding-right: 20px;

  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  row-gap: 8px;
  column-gap: 4px;

  overflow-x: scroll;
  padding-left: var(--padding-left);
  padding-right: var(--padding-right);

  mask-image: linear-gradient(
    to right,
    transparent,
    rgba(0, 0, 0, 1) var(--padding-left),
    rgba(0, 0, 0, 1) calc(100% - var(--padding-right)),
    transparent 100%
  );
}

/* Invisible scrollbar */
.tags::-webkit-scrollbar {
  display: none; /* Safari and Chrome */
}
.tags {
  scrollbar-width: none; /* Firefox */
}
/* Invisible scrollbar end */

.tags > * {
  width: max-content;
}

.modalOuterContainer {
    animation: 0.2s fadeinrise;
  --cookbook-text-color: var(--ifm-font-color-base);
  --cookbook-muted-color: var(--ifm-color-secondary-darkest);
  --cookbook-container-background: rgba(47, 55, 69, 0.7);
  --cookbook-modal-background: var(--ifm-background-color);
  --cookbook-searchbox-background: var(--ifm-color-emphasis-100);
  --cookbook-searchbox-focus-background: var(--ifm-color-black);
  --cookbook-hit-background: var(--ifm-color-emphasis-100);
  --cookbook-footer-background: var(--ifm-background-surface-color);
  --cookbook-key-gradient: linear-gradient(
    -26.5deg,
    var(--ifm-color-emphasis-200) 0%,
    var(--ifm-color-emphasis-100) 100%
  );

  --cookbook-modal-width: 1000px;
  --cookbook-modal-height: 800px;
  --cookbook-modal-shadow: inset 1px 1px 0 0 #2c2e40, 0 3px 8px 0 #000309;
  background: var(--cookbook-container-background);
  left: 0;
  position: fixed;
  top: 0;
  z-index: calc(var(--ifm-z-index-fixed) + 10);
  display: flex;
  align-items: center;
  justify-content: center;

  padding-bottom: calc(env(safe-area-inset-bottom) + 90px);
  padding-top: 20px;
  padding-left: 20px;
  padding-right: 20px;
}

@keyframes fadeinrise {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}

.modalOuterContainer {
  height: 100vh;
  padding-bottom: calc(env(safe-area-inset-bottom) + 90px);
  width: 100vw;
}
@supports (height: 100dvh) {
  .modalOuterContainer {
    padding-bottom: 20px;
    height: 100dvh;
    width: 100dvw;
  }
}

.header {
  display: flex;
  justify-content: space-between;
  border-bottom: 1px solid var(--ifm-color-emphasis-300);
  padding-left: 20px;
  padding-right: 20px;
  width: 100%;
}
.poweredByContainer > * {
  color: var(--ifm-font-color-base);
}

.poweredByCookbook {
  display: flex;
  align-items: center;
  padding-left: 0px;
}

.poweredByCookbookLogo {
  width: calc(1rem * var(--ifm-breadcrumb-size-multiplier) * 1.5);
  height: calc(1rem * var(--ifm-breadcrumb-size-multiplier) * 1.5);
  margin-right: 6px;
  margin-bottom: 3px;
}

.notActive {
  pointer-events: none;
}

.closeBtn {
  position: absolute;
  top: 20px;
  right: 20px;
  color: var(--ifm-color-content);
  transition: opacity 0.2s ease-in-out;
}
.closeBtn:hover {
  opacity: 0.75;
}

.buttonIcon {
  cursor: pointer;
}

.buttonIcon:hover > * {
  color: var(--ifm-link-color);
}

.buttonIcon > * {
  transform: scale(1.1);
  transform-origin: bottom;
  transition: color 0.15s ease-in;
  color: var(--cookbook-text-color);
}

.sidebarToggleContainer {
  position: absolute;
  width: 32px;
  height: max-content;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  z-index: 10;
  left: -18px;
  top: 0px;
}

.sidebarToggleButton {
  margin-left: 4px;
  display: flex;
  height: 50px;
  width: 32px;
  flex-shrink: 0;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  align-self: center;
  cursor: pointer;
  border-radius: 6px;

  background: var(--ifm-background-surface-color);
  border-color: var(--ifm-color-emphasis-200);
  --color: var(--ifm-color-emphasis-300);
  --hover-color: var(--ifm-color-emphasis-500);
}
.sidebarToggleButton::before,
.sidebarToggleButton::after {
  height: 12px;
  width: 4px;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--color);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.87, 0, 0.13, 1);
  transition-duration: 300ms;
  --tw-content: "";
  content: var(--tw-content);
}
.sidebarToggleButton::before {
  content: var(--tw-content);
  transform-origin: bottom;
  --tw-rotate: 0deg;
  --tw-translate-x: 0px;
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate));
}
.sidebarToggleButton::after {
  content: var(--tw-content);
  transform-origin: top;
  --tw-rotate: 0deg;
  --tw-translate-x: 0px;
  --tw-translate-y: -2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate));
}
@media (hover: hover) and (pointer: fine) {
  .sidebarToggleButton:hover::before {
    background-color: var(--hover-color);
  }
  .sidebarToggleButton:hover::after {
    background-color: var(--hover-color);
  }
}

@media (hover: hover) and (pointer: fine) {
  .sidebarToggleButton__open:hover::before {
    --tw-rotate: 15deg;
    --tw-translate-x: -2px;
  }
  .sidebarToggleButton__open:hover::after {
    --tw-rotate: -15deg;
    --tw-translate-x: -2px;
  }
}
.sidebarToggleButton:not(.sidebarToggleButton__open)::before {
  --tw-rotate: -15deg;
  /* transform: rotate(-15deg); */
}
.sidebarToggleButton:not(.sidebarToggleButton__open)::after {
  --tw-rotate: 15deg;
  /* transform: rotate(15deg); */
}

.sidebarToggleButton {
  transition: all 300ms cubic-bezier(0.87, 0, 0.13, 1);
  transform: translateX(0px);
}
.sidebarToggleButton:not(.sidebarToggleButton__open) {
  transform: translateX(10px);
  padding-left: 15px !important;
}
.sidebarToggleButton__open {
  transform: translateX(-13px);
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
/* .sidebarToggleButton:not(.sidebarToggleButton__open)::before,
.sidebarToggleButton:not(.sidebarToggleButton__open)::after {
  --translate-x: 5px !important;
} */

.option {
  --bg-color: transparent;
  --active-color: #363a3f;
  --border-color: #30a46c;
  --icon-color: #edeef0;
  --padding-for-icons: 80px;

  position: relative;
  padding-top: 12px;
  padding-bottom: 12px;
  padding-left: 16px;
  padding-right: 0px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  border-left-width: 2px;
  border-left-color: transparent;
  border-left-style: solid;
  background: var(--bg-color);
  transition: all ease-out 150ms;
  cursor: pointer;
}
.optionLabel {
  transition: all ease-out 150ms;
  --tw-text-opacity: 1;
  color: rgb(175 179 186 / var(--tw-text-opacity));

  height: 22px;
  line-height: 1.25;
  overflow: hidden;
  word-break: break-all;
  --tw-text-opacity: 1 !important;
  color: rgb(237 238 240 / var(--tw-text-opacity)) !important;
  mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 1) calc(100% - var(--padding-for-icons) - 32px),
    transparent calc(100% - var(--padding-for-icons) + 16px)
  );
  mask-size: calc(100% + var(--padding-for-icons) * 0.6) 100%;
}
@media (hover: hover) and (pointer: fine) {
  .option:hover > * {
    opacity: 1 !important;
  }
  .option:hover .optionLabel {
    mask-size: 100% 100%;
  }
  .option:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(54 58 63 / var(--tw-bg-opacity));
  }
}

.optionIcons {
  position: absolute;
  right: 0px;
  z-index: 10;
  display: flex;
  height: 100%;
  width: var(--padding-for-icons);
  align-items: center;
  justify-content: center;
  gap: 8px;
  transition-property: opacity;
  transition-timing-function: ease-in-out;
  transition-duration: 150ms;
  opacity: 0;
  /* background: linear-gradient(270deg, #313339 78.13%, rgba(49, 51, 57, 0) 100%); */
}

.sidebarBottomContainer {
  position: absolute;
  bottom: 0px;
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  border-top-width: 1px;
  --tw-border-opacity: 1;
  border-top-style: solid;
  border-top-color: var(--ifm-color-emphasis-200);
  padding-left: 14px;
  padding-right: 14px;
  padding-top: 20px;
  padding-bottom: 20px;
}

.mainContentContainer {
  position: relative;
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  padding-bottom: 20px;
}
